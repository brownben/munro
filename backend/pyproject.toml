[project]
name = "munro"
version = "2.0.0"
description = "League Results. Sorted."
keywords = ['sports', 'leagues', 'scoring', 'results', 'orienteering']
authors = [
  { name = "Ben Brown", email = "9870007+brownben@users.noreply.github.com" },
]
readme = 'README.md'
license = { file = "../LICENSE.md" }
requires-python = ">=3.13"

dependencies = [
  # fastapi
  "fastapi~=0.115.11",
  "uvicorn[standard]~=0.34.0",
  "uvloop~=0.21.0; platform_system != 'Windows'",

  # database
  "piccolo==1.23.0",
  "asyncpg~=0.30.0",

  # results file parsing
  "beautifulsoup4~=4.13.3",
  "lxml~=5.3.1",
  "defusedxml~=0.7.1",

  # check firebase auth tokens
  "google-auth~=2.38.0",
  "requests~=2.32.3",

  "httpx~=0.28.1",    # make requests for results files
  "icalendar~=6.1.1", # generate ical files
]
optional-dependencies.dev = [
  "aiosqlite~=0.21.0",
  "coverage~=7.6.12",
  "mypy~=1.15.0",
  "respx~=0.22.0",
  "ruff~=0.11.0",
  "time-machine~=2.16.0",
  "types-beautifulsoup4~=4.12",
  "types-icalendar~=6.1.0",
  "types-requests~=2.32.0",
]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
omit = [".venv/*", "*/test*", "*/*database_conf.py"]
exclude_lines = ["coverage: ignore"]

[tool.mypy]
strict = true
plugins = "pydantic.mypy"
mypy_path = 'src/types'
files = '**/*.py'
explicit_package_bases = true

[tool.ruff.lint]
ignore = [
  "E501", # Line too long
  "B904", # Raise inside except
]
per-file-ignores = { "./src/database/*" = ["E712"] }

select = [
  "F",    # Pyflakes
  "E",    # pycodestyle (errors)
  "W",    # pycodestyle (warnings)
  "UP",   # pyupgrade
  "B",    # flake8-bugbear
  "SIM",  # flake8-simplify
  "I",    # isort
  "PERF", # Performnce
  "RUF",  # Ruff
]
